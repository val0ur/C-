gogo
[디지털 포렌식 개론 중간 대체 과제] 
2020          서동조 
2020021524 윤승기 

Standalone 버전의 결과 DB 파일을 활용하여 시각화
(input data는 신세계 모의케이스 이미지 활용)

1. 여러 아티팩트를 종합하여 의미를 찾을 수 있는 아이디어_서동조, 윤승기

2. 결과 DB 파일에서 SQL 쿼리로 조회하여 데이터 합치기_서동조

3. 시각화 기능 구현 - 오픈소스 시각화 API_윤승기

-----------------------------------------------------------------

Main idea
특정 이벤트(Event ID:1100)가 발생했을 때 해당 이벤트 전후 1시간 동안의 아티팩트들을 시각화

Scenario
윈도우 이벤트 ID : 1100의 경우에는 이벤트 로깅 서비스가 종료되었음을 알려주는 이벤트로 
해당 시간대 주변의 artifact들을 추적함으로써 정상적인 서비스 종료인지 악의적인 행위가 있었는지를 확인
행위가 있었을 경우 브라우저 검색기록 및 설치된 프로그램을 기반으로 어떤 program을 사용했는지까지 추적

Factors
antiforensics 		- Event ID :110
timeline 			- Overall Activities 
chrome_search_terms 	- Most used Browser
installed_program 		- Download Programs

-----------------------------------------------------------------
동조 part
-----------------------------------------------------------------

Language : C#, R 
기본적으로 R을 이용해 시각화를 구현했고 전체 틀인 C#을 활용하기 위해 
C#과 R을 연동시켜주는 R.net 라이브러리 활용 

Summary
Timeline, Search_terms, Installed_programs 세 항목과 Antiforensic 까지 총 네개의 항목을 
수평선 상에 시간의 흐름에 따라 나타내는 타임라인

Details
Antiforensic 이벤트(Event ID : 1100)를 그래프 상에 "BOOM"이라고 표현했으며 
각 artifact마다 어떤 작업을 몇시에 수행했는지를 한 눈에 보기 쉽도록 구현했습니다.

평균적으로 한 program을 설치하고 사용하는 과정을 생각해보았을 때 
+-30분이면 관련 이벤트 및 로그를 충분히 포함할 수 있을 것이라 생각하여
이벤트가 발생한 시각을 기준으로 전 30분과 후 30분 총 1시간의 데이터를 표현했습니다. 

+++
수평선에 동일한 시간 간격으로 눈금을 만들고 이벤트의 시간을 찍어주는 방식의 경우에는 
특정 시간 구간대에 이벤트가 몰릴 경우 가독성이 떨어진다는 문제점이 있었습니다. 
이를 해결하기 위해 이벤트가 발생한 시각들을 수평선 고르게 분포시켜 가독성 문제를 해결했습니다. 
